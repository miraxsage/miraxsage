import { ProjectContent, ProjectContentProps, ProjectContentImage, ProjectContentImageProps } from "../ProjectContent";

function Image({ img, side }: Omit<ProjectContentImageProps, "slug">) {
    return <ProjectContentImage slug="wordsense" side={side} img={img} />;
}

export function Component({ onImageClick }: ProjectContentProps) {
    return (
        <ProjectContent onImageClick={onImageClick}>
            <br />
            <p>
                <Image img={1} />
                WordSense представляет собой личный пет-проект с открытым исходным кодом на современном стеке
                технологий. В рамках данной разработки хотелось укрепить свои знания во фреймворке Laravel, в настоящее
                время, считаю, занимающим абсолютную популярность на PHP, а PHP по прежнему занимает большую долю
                веб-сайтов.
            </p>
            <p>
                Не секрет, что Laravel популярен не просто так, он предлагает множество удобных и готовых решений, в том
                числе одним из которых является дополнительная библиотека Inertia интеграции React на клиенте и Laravel
                на сервере. На клиенте Inertia замещает ReactRouter, предоставляя собственные интерфейсы роутинга,
                связанные с архитектурой маршрутизации Laravel, соответственно на сервере Inertia внедряет свой код в
                том числе в связке в бандлером Vite для удобной разработки, который позволяет связать вашу логику на
                клиенте и сервере.
            </p>
            <p>
                <Image img={3} />
                Кроме предлагаемого Laravel решения для интеграции серверной части (моделей, контроллеров и прочих
                инструметов бизнес логики) и клиентской, реализуемой с помощью одной из популярных библиотек отрисовки
                пользовательского веб-интерфейса (React и Vue) также был сделан выбор при проектировании будущего
                решения в сторону нескольких вспомогательных библиотек на клиенте, это React, MUI для использования
                готовых элементов упавления и системы управления стилями, Redux для управления состоянием.
            </p>
            <p>
                <Image side="right" img={5} />В настоящее время проект находится только в самом начале разработке,
                определены цели и задачи, инструменты и библиотеки разработки, реализована возможность переключения
                между светлой и темной темой, реализована базовая регистрация и авторизация, реализован первый экран
                приложения.
            </p>
            <p>
                В дальнейшем планируется реализация множества функций, это и возможность чтения книг и статей с двойным
                переводом, и ведение собственного словаря, продвинутая система закрепления знаний, функциональный
                словарь с максимально подробным разбором слов с популярностью перевода, связанными группами слов,
                множеством примеров применения в контексте и многое другое.
            </p>
        </ProjectContent>
    );
}
