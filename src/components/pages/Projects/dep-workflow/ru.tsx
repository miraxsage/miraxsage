import { ProjectContent, ProjectContentProps, ProjectContentImage, ProjectContentImageProps } from "../ProjectContent";

function Image({ img, side }: Omit<ProjectContentImageProps, "slug">) {
    return <ProjectContentImage slug="dep-workflow" side={side} img={img} />;
}

export function Component({ onImageClick }: ProjectContentProps) {
    return (
        <ProjectContent onImageClick={onImageClick}>
            <br />
            <p>
                <Image img={1} />
                Программа управления документооборотом отдела написана на платформе .NET (WPF), и ориентирована на
                управление различного рода документами с использованием сервера баз данных MS SQL Server. Позволяет
                хранить, вести учет и разграничивать доступ для различных сотрудников к документам отдела, в качестве
                которого может выступать кафедра, отдел кадров, библиотека, офис и т. д.
            </p>
            <p>
                <Image side="right" img={1} />
                Ключевая логика иерархического разделения доступа к документам основана на базовом понятии отдела, у
                которого устанавливается руководитель, перечень сотрудников и набор документов. Программа же
                предоставляет доступ к документам своего или другого отдела, к сведениям о сотрудниках, отделах и т.д.,
                надежно хранящихся в базе данных, в зависимости от привилегий доступа, настроенных администратором или
                сотрудником отдела соответствующего уровня.
            </p>
            <p>
                После выполнения процедур регистрации и авторизации пользователь может также зарегистрироваться в одном
                из имеющихся в базе данных отделов, либо создать новый если обладает правами администратора.
            </p>
            <p>
                <Image img={6} />
                Каждый пользователь может обладать ролью администратора базы данных, руководителя или сотрудника отдела,
                в зависимости от чего определяется их уровень привилегий и возможностей работы с программой, среди
                которых можно выделить такие основные как создание, удаление и модификация объектов программных данных,
                под которыми понимаются объекты 4 базовых типа:
                <br />
                а) пользователи базы данных;
                <br />
                б) предметы базы данных, определяющих предметную область документации с которой работает тот или иной
                сотрудник, например, в качестве них могут выступать академические дисциплины, если речь идет о кафедре,
                либо направления работы фирмы, по каждому из которых готовится пакет документации;
                <br />
                в) документы, перечень которых индивидуально может иметь каждый пользователь, объединяя их в рамках
                одного предмета, например, это могут быть документы Microsoft Office Word, Excel, Power Point, либо
                файлы иного типа;
                <br />
                г) отделы базы данных, характеризующиеся перечнем зарегистрированных в них пользователей и предметов;
            </p>
            <p>
                <Image side="right" img={7} />
                Кроме того, DepWorkflow выполняет следующие функции: – обеспечение гибкого контроля доступа
                пользователей отдельных ролей к перечисленным типам объектов, с точки зрения их принадлежности к:
                <br />
                а) сотруднику отдела (которыми управлять может и сотрудник и руководитель и администратор БД);
                <br />
                б) руководителю отдела (редактирование такого рода данных доступно только руководителю и
                администратору);
                <br />
                <Image img={8} />
                в) администратору базы данных (привилегия администратора дает полный доступ ко всем объектам базы
                данных).
                <br />
                – обеспечение интерактивного взаимодействия и обновления данных внутри приложения в режиме реального
                времени;
                <br />
                – обеспечение высокой интерактивности приложения, позволяющей формировать большую часть используемых
                данных в графической форме;
                <br />
                – представление программы в форме визуального приложения;
                <br />– обеспечение автоматического восстановления базы данных приложения при первоначальной
                инициализации приложения с имеющимся файлом БД.
            </p>
        </ProjectContent>
    );
}
